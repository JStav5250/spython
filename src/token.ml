open Sparser


let string_of_token (t:token) = 
 match t with
 | SPACE -> "SPACE"
 | TAB -> "TAB"
 | EOL -> "EOL"
 | ASSIGN -> "ASSIGN" 
 | PLUS -> "PLUS" 
 | MINUS -> "MINUS" 
 | TIMES -> "TIMES" 
 | DIVIDE -> "DIVIDE" 
 | MOD -> "MOD" 
 | EXP -> "EXP" 
 | PLUSEQ -> "PLUSEQ" 
 | MINUSEQ -> "MINUSEQ" 
 | TIMESEQ -> "TIMESEQ" 
 | DIVIDEEQ -> "DIVIDEEQ" 
 | MODEQ -> "MODEQ" 
 | EXPEQ -> "EXPEQ" 
 | LPAREN -> "LPAREN" 
 | RPAREN -> "RPAREN" 
 | LBRACK -> "LBRACK" 
 | RBRACK -> "RBRACK" 
 | LBRACE -> "LBRACE" 
 | RBRACE -> "RBRACE" 
 | SEMI -> "SEMI" 
 | COMMA -> "COMMA" 
 | EQ -> "EQ" 
 | NEQ -> "NEQ" 
 | LT -> "LT" 
 | LEQ -> "LEQ" 
 | GT -> "GT" 
 | GEQ -> "GEQ" 
 | AND -> "AND" 
 | OR -> "OR" 
 | NOT -> "NOT" 
 | IF -> "IF" 
 | ELSE -> "ELSE" 
 | ELIF -> "ELIF" 
 | WHILE -> "WHILE" 
 | FOR -> "FOR" 
 | RETURN -> "RETURN" 
 | BREAK -> "BREAK" 
 | CONTINUE -> "CONTINUE" 
 | DEF -> "DEF" 
 | ARROW -> "ARROW" 
 | COLON -> "COLON" 
 | PRINT -> "PRINT" 
 | RANGE -> "RANGE" 
 | PASS -> "PASS" 
 | ASSERT -> "ASSERT" 
 | BOOL -> "BOOL" 
 | INT -> "INT" 
 | FLOAT -> "FLOAT" 
 | STRING -> "STRING"
 | VARIABLE(s) -> "VARIABLE: " ^ s
 | BOOL_LITERAL(b) -> "BOOL: " ^ string_of_bool b
 | INT_LITERAL(i) -> "INT_LITERAL: " ^ string_of_int i
 | FLOAT_LITERAL(f) -> "FLOAT_LITERAL: " ^ string_of_float f
 | STRING_LITERAL(s) -> "STRING_LITERAL: " ^ s
 | EOF -> "EOF"
